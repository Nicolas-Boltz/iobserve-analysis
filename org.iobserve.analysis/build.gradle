dependencies {
    compile project(":org.iobserve.common")
	
	compile 'org.codehaus.mojo:exec-maven-plugin:1.2'
	compile 'net.sourceforge.teetime:teetime:2.1'
	compile 'net.sourceforge.teetime-stages:teetime-stages:2.1'
	compile 'net.kieker-monitoring:kieker:1.13-SNAPSHOT'
	
	compile 'org.eclipse.emf:org.eclipse.emf.ecore.xmi:2.11.+'
	compile 'org.eclipse.emf:org.eclipse.emf.common:2.11.+'
	compile 'org.eclipse.emf:org.eclipse.emf.ecore:2.11.+'
	compile 'org.eclipse.uml2:org.eclipse.uml2.uml:3.1.+'
	
	compile 'org.eclipse.core:runtime:3.10.+'
	//compile 'org.eclipse:ocl:3.3.+'
	//compile 'org.eclipse.ocl:common:1.2.0-v20140528-1458'
	//compile 'org.eclipse.ocl:ecore:3.3.0-v20130520-1222'
	compile 'lpg.runtime:java:2.0.17-v201004271640'
	compile 'org.antlr:antlr-runtime:3.5.2'
	
	
	//compile group: 'org.eclipselabs', name: 'cdo.p2', version: '4.4.0'
	//compile group: 'org.eclipselabs', name: 'cdo', version: '4.4.0', ext: 'pom'
	//compile group: 'org.eclipselabs', name: 'cdo-maven', version: '4.4.0', ext: 'pom'
	
	
    compile fileTree(dir: 'libs', include: '*.jar')
    compile fileTree(dir: 'pcm/libs', include: '*.jar')
    
    
    compile 'extra:de.uka.ipd.sdq.identifier:2.1.0.201511050934'
    compile 'extra:org.palladiosimulator.pcm:4.0.0.201511051135'
    
    compile 'extra:de.uka.ipd.sdq.units:2.1.0+'
    compile 'extra:de.uka.ipd.sdq.stoex:2.2.0+'
    compile 'extra:de.uka.ipd.sdq.probfunction:2.1.0+'
    compile 'extra:org.eclipse.emf.cdo:4.4.1+'
    compile 'extra:org.eclipse.emf.cdo.common:4.4.1+'
}

ext {
	toolsDir = "../tools/"
	toolPcmLoader = "eclipse_lib_loader.jar"
	toolPcmLoaderConfigFile = "config_eclipse_lib_loader.xml"
	
	pcm_working_dir = 'res/working_dir/pcm'
	pcm_original_dir = 'res/original_dir/pcm'
}

sourceSets {
	main {
	   	java {
	   		srcDir 'src/main/irl'
	   		srcDir 'src/gen/java'
	   		srcDir 'src/gen/java-factory'
	   	}
   	}
}

task loadPcmLibraries(type : Exec) {
	String command = "java -jar $toolsDir$toolPcmLoader --config=$toolsDir$toolPcmLoaderConfigFile"
	println "running pcm-lib-loader -> $command"
	
	workingDir '.'
	commandLine 'cmd', '/c', command
	standardOutput = System.out
} 

task cleanPcmWorkingDir(type: Delete) {
	delete pcm_working_dir
}

task copyPcmToWorkingDir(type: Copy) {
	dependsOn << cleanPcmWorkingDir
	from pcm_original_dir
	into pcm_working_dir
}

task runAnalysis(type: JavaExec) {
	dependsOn << compileJava
	dependsOn << copyPcmToWorkingDir
	classpath = sourceSets.main.runtimeClasspath
	main = 'org.iobserve.analysis.AnalysisMain'
	args '--dirMonitoring=res/original_dir/kieker', '--dirPcm=res/working_dir/pcm', '--dirLogging=output/logging'
}
