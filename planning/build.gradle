apply plugin: 'application'
apply plugin: 'java'

mainClassName = 'org.iobserve.analysis.service.PlanningMain'

if (version.isEmpty()) {
	System.err.println("version not set")
}
if (group.isEmpty()) {
	System.err.println("group not set")
}

dependencies {
    compile project(":analysis")
	compile project(":service")

	clover 'org.openclover:clover:4.2.0'

    compile 'commons-daemon:commons-daemon:1.0.15'
    compile "com.beust:jcommander:1.60"
    compile 'javax.json:javax.json-api:1.0'
    compile 'org.glassfish:javax.json:1.0.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'org.json', name: 'json', version: '20170516'

    // https://mvnrepository.com/artifact/com.sun.net.httpserver/http
    testCompile group: 'com.sun.net.httpserver', name: 'http', version: '20070405'
    
    // central
	testCompile "junit:junit:4.12"
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.powermock:powermock-core:1.6.1'
    testCompile 'org.powermock:powermock-module-junit4:1.6.1'
    testCompile 'org.powermock:powermock-api-mockito:1.6.1'
}

clover {
	report {
		html=true
	}
	
}

test {
  println 'Starting unit tests.'
  scanForTestClasses= false
  include '**/service/suites/*'
  exclude '**/service/services/*'
  exclude '**/service/updater/*'
}

install {
    repositories.mavenInstaller {
        pom.version = version
        pom.groupId = 'org.iobserve'
        pom.artifactId = 'service.planning'
    }
}
