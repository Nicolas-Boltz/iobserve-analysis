buildscript { 
	
	// this block can be used later to add custom plug-ins for gradle
	// just an example for now
	
    repositories {
        //jcenter()
    }
    dependencies {
        //classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:0.4.1"
    }
}



subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'eclipse'
    
    ext {
        appName = "org.iobserve"
    }
    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven {url "https://oss.sonatype.org/content/repositories/releases/" }
		maven {url "https://mvnrepository.com/artifact/org.eclipse.emf/org.eclipse.emf.ecore" }
		maven {url "https://oss.sonatype.org/content/groups/public/"}
		maven {url "https://jitpack.io"}
		maven {url "https://mvnrepository.com/artifact/org.eclipse/ocl" }
		maven {url "http://mvnrepository.com/artifact/org.eclipselabs/cdo.p2"}
		maven {url "http://mvnrepository.com/artifact/org.eclipselabs/cdo"}
		maven {url "http://mvnrepository.com/artifact/org.eclipselabs/cdo-maven"}
		maven {url "http://mvnrepository.com/artifact/commons-daemon/commons-daemon"}
		maven {url "http://mvnrepository.com/artifact/commons-cli/commons-cli"}
		maven {url "../mvn-repo" }
    }
    
    eclipse {
	    classpath {
	       downloadSources=true
	       downloadJavadoc=true
	    }
	}
}

task buildSetup {
	// checking the presence of an Eclipse API baseline
	if (project.properties['eclipse.api.baseline'] == null || project.properties['eclipse.api.baseline'].isEmpty()) {
		System.err.println("Cannot find an Eclipse API baseline")
		System.err.println("Create file iobserve-analysis/gradle.properties if missing.")
		System.err.println("Add the property eclipse.api.baseline=ECLIPSE PLUGIN PATH")
		System.err.println("Use / for path separation")
	} else {
		println "Eclipse API baseline installation is at: " + project.properties['eclipse.api.baseline']
	}
	
	
}
